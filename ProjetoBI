
/* ESSE SCRIPT É EXCLUSIVO PARA A FERRAMENTA POSTGRESQL.
NÃO HÁ GARANTIAS DE QUE TODO O SCRIPT ESTEJA CORRETO, DESDE 
A EXECUÇÃO DOS COMANDO ATÉ O RESULTADO FINAL ESPERADO.*/

/*OS NOMES PRÓPRIOS SÃO FICTÍCIOS INCLUSIVE OS EMAILS E 
ENDEREÇOS*/

/* É IMPORTANTE QUE SE TENHA ALGUMA NOÇÃO DE SQL E DESENVOLVIMENTO
DE BANCO DE DADOS, POIS A SIMPLES EXECUÇÃO DESTE SCRIPT NÃO TRARÁ 
COMO RESULTADO UM BANCO DE DADOS CONSISTENTE */

--------------------------------------------------------------------------------
-- MODELO TRANSACIONAL 


--CRIANDO DATABASE --
CREATE DATABASE BI;

--DROP DATABASE BI; 

--CRIAR TABELAS--

--CLIENTE
CREATE TABLE CLIENTE
(CPF INT PRIMARY KEY,
NOME VARCHAR(50), 
EMAIL VARCHAR(50));



--PRODUTO
CREATE TABLE PRODUTO
(ID_PRODUTO SERIAL PRIMARY KEY, 
DESCRICAO VARCHAR(100), 
PRECO DECIMAL(10,2), 
QNTDESTOQUE NUMERIC);



--COMPRA
CREATE TABLE COMPRA -- A TABELA COMPRA SERVIRá DE REFERêNCIA PARA SABER A DATA DA COMPRA -- 
(ID_COMPRA SERIAL PRIMARY KEY, 
DATACOMPRA DATE, 
HORACOMPRA TIME, 
CPF_CLIENTE INT NOT NULL, 
FOREIGN KEY (CPF_CLIENTE) REFERENCES CLIENTE (CPF));
--ALTER TABLE COMPRA ALTER COLUMN HORACOMPRA TYPE TIME;



--ENDEREçO DE ENTREGA

CREATE TABLE ENDERECOENTREGA -- USANDO COMO BASE DE LOCALIZAçãO O ENDEREçO DE ENTREGA--
(CPF_CLIENTE INT NOT NULL, 
ID_COMPRA INT,
LOGRADAOURO VARCHAR(50), 
NUMERO INT, 
COMPLEMENTO VARCHAR(100), 
BAIRRO VARCHAR(30), 
CIDADE VARCHAR(30),
CEP INT, 
UF CHAR(2), 
PAIS VARCHAR(30)DEFAULT 'BRASIL', -- NOSSO OUTLET VENDE PARA FORA DO PAíS -- 
FOREIGN KEY (CPF_CLIENTE) REFERENCES CLIENTE(CPF),  
FOREIGN KEY (ID_COMPRA) REFERENCES COMPRA(ID_COMPRA));
--DROP TABLE ENDERECOENTREGA;


-- ITENS DE VENDA
CREATE TABLE ITEM -- A TABELA ITEM SERá REFERêNCIA PARA QUAL ITEM FOI VENDIDO--
(ID_COMPRA INT,
ID_PRODUTO INT,
QNT INT, 
VALOR DECIMAL(10,2),
PRIMARY KEY (ID_COMPRA,ID_PRODUTO),
FOREIGN KEY (ID_COMPRA) REFERENCES COMPRA(ID_COMPRA),
FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTO(ID_PRODUTO));



-- INSERINDO DADOS NA TABELA CLIENTE

INSERT INTO CLIENTE VALUES 
(1,'EBERTI FALCãO','EBER@HOTMAIL.COM'),
(2,'MARCIA FALCãO','M@HOTMAIL.COM'),
(3,'EDSON AZEVEDO', 'EDSON@GMAIL.COM.BR'),
(4,'MARIA','MARIA@HOTMAIL.COM'),
(5,'JOSE','JOSE@HOTMAIL.COM'),
(6,'JOãO','JOAO@HOTMAIL.COM'),
(7,'DAVI','DAVI@GMAIL.COM.BR'),
(8,'PEDRO','PEDRO@HOTMAIL.COM'),
(9,'LUCAS','LUCAS@HOTMAIL.COM'),
(10,'ELAINE','ELAINE@IG.COM.BR'),
(11,'ILDA','ILDA@HOTMAIL.COM'),
(12,'MARCELE','MARCELE@HOTMAIL.COM'),
(13,'MARCELO','MARCELO@HOTMAIL.COM'),
(14,'MARCELA','MARCELA@GMAIL.COM.BR'),
(15,'GABRIELA','GABRIELA@GMAIL.COM.BR'),
(16,'RENATA','RENATA@HOTMAIL.COM'),
(17,'ROGER','ROGER@HOTMAIL.COM'),
(18,'ROGERIO','ROGERIO@HOTMAIL.COM'),
(19,'ADRIANO','ADRIANO@HOTMAIL.COM'),
(20,'ADRIANA','ADRIANA@GMAIL.COM.BR'),
(21,'SIDNEI','SIDNEI@HOTMAIL.COM'),
(22,'ROBERTA','ROBERTA@HOTMAIL.COM'),
(23,'ROBERTO','ROBERTO@HOTMAIL.COM'),
(24,'AUDREY','AUDREY@HOTMAIL.COM'),
(25,'TOBIAS','TOBIAS@HOTMAIL.COM'),
(26,'BEATRIZ','BEATRIZ@HOTMAIL.COM'),
(27,'CAROL','CAROL@HOTMAIL.COM'),
(28,'JULIANA','JULIANA@GMAIL.COM.BR'),
(29,'JULIANO','JULIANO@HOTMAIL.COM'),
(30,'ELIANE','ELIANE@HOTMAIL.COM'),
(31,'ELIANA','ELIANA@HOTMAIL.COM'),
(32,'JUNIOR','JUNIOR@HOTMAIL.COM'),
(33,'MAYARA','MAYARA@HOTMAIL.COM'),
(34,'NAYRA','NAYRA@HOTMAIL.COM'),
(35,'GRAZIELE','GRAZIELE@GMAIL.COM.BR'),
(36,'JOSEZITA','JOSEZITA@HOTMAIL.COM'),
(37,'LIDNALVA','LINDNALVA@HOTMAIL.COM'),
(38,'ROSANA','ROSANA@HOTMAIL.COM'),
(39,'CARLOS','CARLOS@HOTMAIL.COM'),
(40,'RHAMISSE','RHAMISSE@GMAIL.COM.BR'),--
(41,'CARLOS ANTôNIO DE OLIVEIRA ', 'CARLOS.OLIVEIRA@CONEN.COM.BR'),
(42, 'VON AMAYA MEJUA' , 'AMAYSRVONNE@HOTMAIL.COM' ),
(43, 'LUIZ FILIPE P.CRUZ' , 'LUIZFILIPEPILOMAMTO@HOTMAIL.COM'),
(44, 'CARINA F. MARTINS ALMEIDA',  'CARINA.FMA@GMAIL.COM' ),
(45, 'LUíS EDUARDO',  'EDUCONEN@GAMIL.COM' ),
(46, 'SKARLAT REYNNELY ALVES',  'SKARLATALVES@CONEN.COM.BR') ,
(47, 'BRUNA SILVEIRA E SILVA',  'BRUNASILVEIRA7@GAMAIL.COM') ,
(48, 'RAFAEL COSK',  'RAFAEL.COSK@CONEN.COM.BR' ),
(49, 'PAULA COELHO',  'PAULA.COELHO@CONEN.COM.BR' ), 
(50, 'HUGO ALVES',  'HPALVES13@YHOO.COM.BR'),
(51, 'CAROLINA DOS S. FIGUEIREDO' , 'CAROLINA.CSF@HOTMAIL.COM'),  
(52, 'ANDERSON CARDOSO' , 'ANDER.CARD@HOTMAIL.COM' ),
(53, 'FABIO MACEDO VARGAçAS' , 'FABIO.VERGACAS@HOTMAIL.COM'),  
(54, 'MONIQUE A ALVES',  'MONIQUE.ALVES02@GMAIL.COM'  ),
(55, 'MARCELO FERREIRA FONSECA',  'MARCELO.FONSECA@CONEN.COM.BR'),  
(56, 'GUESTER AMORIM',  'GUESTER.AMORIM@GMAIL.COM'  ),
(57, 'MARCIA REGINA C LASMAR','MARCIA.LASMAR@CONEN.COM.BR' ),

(58, 'AURéLIO DE SOUSA JESUS RITA', 'ASOUJERITA@YAHOO.COM.BR'),
(59, 'BERNARDINA FERNANDES VAZ','BERNARDINAVAZ@HOTMAIL.COM'),
(60, 'BETTENCOURT NETO','BENTENETO@YAHOO.COM.BR'),
(61, 'BILMA BANDEIRA MANDINGA','BILMA.B.MANDINGA@HOTMAIL.COM'),
(62, 'BRíGIDA ROCHA BRITO','BRIGIDABRITO@NETCABO.PT'),
(63, 'CARLOS BERNARDES DA COSTA','CABCOSTA@HOTMAIL.COM'),
(64, 'CARLOS MANUEL BAíA','BAIACARLOS2000@HOTMAIL.COM'),
(65, 'CARLOS VALES','CVALES@CEIDA.ORG'),
(66, 'CECíLIA CASTELO VIEGAS','AMBIDESE-GRACAVIE@YAHOO.COM.BR'),
(67, 'CLIDOR PIRES','CLIDORPIRES@HOTMAIL.COM'),
(68, 'ARMINDO VERA CRUZ','ARMINDOVERACRUZ@@YAHOO.COM.FR');




    
      

--------------------------------------------------------------------------------
--FUNÇÕES

--INSERINDO DADOS NA TABELA COMPRA


CREATE OR REPLACE FUNCTION DADOSCOMPRA()
RETURNS VOID AS
$$
DECLARE
I INT;
Z INT;
BEGIN
Z=1;
FOR I IN 1..3 LOOP
INSERT INTO COMPRA VALUES (I,  '06-05-2016',CURRENT_TIME,Z);


I:= I+1;
Z:= Z+1;
END LOOP;

FOR I IN 4..6 LOOP
INSERT INTO COMPRA VALUES (I,  '28-02-2015',CURRENT_TIME,Z);


I:= I+1;
Z:= Z+1;
END LOOP;

FOR I IN 7..10 LOOP
INSERT INTO COMPRA VALUES (I,  '07-02-2016',CURRENT_TIME,Z);


I:= I+1;
Z:= Z+1;
END LOOP;
END;
$$
LANGUAGE PLPGSQL;

SELECT DADOSCOMPRA();
SELECT * FROM COMPRA
ORDER BY 1;
--------------------------------------------------------------------------

-- ESTA FUNçãO ADICIONA CPF, IDCOMPRA, NUMERO, UF E PAIS NA TABELA ENDERECOENTREGA
--ESTE INSERT PEGA OS ID_COMPRA E CPF_CLIENTE DA TABELA COMPRA E ADICIONA NA TABELA ENDEREçOENTREGA
--O MOTIVO FOI PORQUE NO BANCO DE DADOS ORIGINAL O LOOP FOI ALTERADO PARA AS CHAVES DE COMPRA E DE CLIENTE NãO SEREM IGUAIS.
INSERT INTO ENDERECOENTREGA(ID_COMPRA, CPF_CLIENTE) (SELECT ID_COMPRA, CPF_CLIENTE FROM COMPRA);

CREATE OR REPLACE FUNCTION DADOSENDERECO()
RETURNS VOID AS
$$
DECLARE
I INT;
Z INT;
N INT;
BEGIN
Z=1;
N=1;
FOR I IN 1..10LOOP
UPDATE ENDERECOENTREGA SET NUMERO = N, UF = 'RJ', PAIS = DEFAULT WHERE CPF_CLIENTE = I;
I:= I+1;
Z:= Z+1;
N:= N+Z;
END LOOP;
FOR I IN 1..10LOOP
UPDATE ENDERECOENTREGA SET CIDADE = 'DUQUE DE CAXIAS', CEP= 666666  WHERE CPF_CLIENTE = I;
I:= I+1;

END LOOP;

FOR I IN 1..3LOOP
UPDATE ENDERECOENTREGA SET BAIRRO = 'VINTE E CINCO DE AGOSTO'  WHERE CPF_CLIENTE = I;
I:= I+1;

END LOOP;

FOR I IN 4..7LOOP
UPDATE ENDERECOENTREGA SET BAIRRO = 'XEREM'  WHERE CPF_CLIENTE = I;
I:= I+1;
END LOOP;

FOR I IN 8..10LOOP
UPDATE ENDERECOENTREGA SET BAIRRO = 'SANTA CRUZ DA SERRA'  WHERE CPF_CLIENTE = I;
I:= I+1;

END LOOP;
END;
$$
LANGUAGE PLPGSQL;


SELECT DADOSENDERECO();
SELECT * FROM ENDERECOENTREGA;



--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

-- ESTA TABELA FOI CRIADA PARA INSERIR OS LOGRADOUROS DA TABELA ENDERECOENTREGA

CREATE TABLE LOGRADOURO (NUM INT,LOGRADOURO VARCHAR(100));
INSERT INTO LOGRADOURO VALUES
      (1,'RUA CAMPESTRE'),
      (2,'RUA EPAMINONDAS' ),
      (3,'AV. MICHEL TEMER DAS NEVES'),
      (4,'AV. SAPO BARBUDO'),
      (5,'RUA SãO BERNARDO'),
      (6,'BECO DA MANDINGA'),
      (7,'RUA PROJETADA'),
      (8,'RUA DOS AFOGADOS'),
      (9,'AV. LORENZO LAMAS'),
      (10,'TRAVESSA DOS NóIAS');

      --LIMITEI PARA DEZ POIS OS LOOPS ANTERIORES Só CRIAM 10 LINHAS DE ENDEREçOS
      
     /*(11,'AV. SãO PAULO'),
      (12,'RUA LULALA'),
      (13,'AV. LEONEL BRIZOLA'),
      (14,'AV. ET DE VARGINHA'),
      (15,'BECO DOS SEM SAíDA'),
      (16,'RUA BARTOLOMEU PITACO'),
      (17,'AV. RAFAEL DO GUETO'),
      (18,'RUA MAXILIANO DE SOUZA DIAS'),
      (19,'RUA BOTAFOGO'),
      (20,'TRAVESSA DOS NóIAS'),
      (21,'AV. SãO PAULO'),
      (22,'RUA LULALA'),
      (23,'AV. LEONEL BRIZOLA'),
      (24,'AV. JARDEL DE SOUZA'),
      (25,'RUA EDIR MACEDO'),
      (26,'TRAVESSA RENATO ARAUJO'),
      (27,'AV. VINTE E CINCO DE AGOSTO'),
      (28,'BECO DOS SEM SAíDA'),
      (29,'RUA ARMANDO PINTO DE SOUZA'),
      (30,'TRAVESSA DOS TRAVESSOS'),
      (31,'AV. EDUARDO CUNHA'),
      (32,'AV. PRESIDENTA DILMA '),
      (33,'AV. PRESIDENTO TEMER'),
      (34,'RUA DESPROJETADA'),
      (35,'AV. LULALA BRIZOLA'),
      (36,'AV. LEONEL OEL'),
      (37,'BECO DOS DESAGRADAVEIS'),
      (38,'TRAVESSA DOS ISOLADOS');*/


--------------------------------------------------------------------------------
--ESTA FUNçãO ADICIONA OS LOGRADOUROS NA TABELA ENDERECOENTREGA
CREATE OR REPLACE FUNCTION UPDATEENDERECOLOGRADOURO()
RETURNS VOID AS
$$
DECLARE
I INT;
BEGIN


FOR I IN 1..10LOOP
UPDATE ENDERECOENTREGA SET LOGRADAOURO =(SELECT LOGRADOURO FROM LOGRADOURO WHERE NUM = I)
 WHERE CPF_CLIENTE = I;
I:= I+1;

END LOOP;


END;
$$
LANGUAGE PLPGSQL;


SELECT UPDATEENDERECOLOGRADOURO();
SELECT * FROM ENDERECOENTREGA
ORDER BY 2;
--------------------------------------------------------------------------------
--DUPLICAR DADOS

-- ESSA FUNçãO REPLICA ALGUNS ENDEREçOS E IDCOMPRA, PARA QUE ALGUNS CLIENTES TENHAM MAIS DE UMA COMPRA NO BANCO
-- USAMOS ESTE PARA REPLICAR ENDEREçOS NO BANCO ORIGINAL, MAS AQUI VAI GERAR UMAS ID_COMPRA DUPLICADOS E VAI CRIAR INCONSISTêNCIA NO BANCO DE DADOS POR HAVER APENAS 10 VENDAS.
CREATE OR REPLACE FUNCTION DUPLICARDADOSENDERECOENTREGA()
RETURNS VOID AS
$$
DECLARE
I INT;
Z INT;
BEGIN
Z=2;

FOR I IN 1..5LOOP
INSERT INTO ENDERECOENTREGA  VALUES (I, Z,(SELECT LOGRADAOURO FROM ENDERECOENTREGA WHERE CPF_CLIENTE = I),
(SELECT NUMERO FROM ENDERECOENTREGA WHERE CPF_CLIENTE = I), 
(SELECT COMPLEMENTO FROM ENDERECOENTREGA WHERE CPF_CLIENTE = I),
(SELECT BAIRRO FROM ENDERECOENTREGA WHERE CPF_CLIENTE = I),
(SELECT CIDADE FROM ENDERECOENTREGA WHERE CPF_CLIENTE = I),
(SELECT CEP FROM ENDERECOENTREGA WHERE CPF_CLIENTE = I), 
(SELECT UF FROM ENDERECOENTREGA WHERE CPF_CLIENTE = I), 
(SELECT PAIS FROM ENDERECOENTREGA WHERE CPF_CLIENTE = I) );
I:= I+1;
Z:= Z+2;
END LOOP;


END;
$$
LANGUAGE PLPGSQL;


SELECT DUPLICARDADOSENDERECOENTREGA();

SELECT * FROM ENDERECOENTREGA
ORDER BY 1;
SELECT * FROM ENDERECOENTREGA
ORDER BY 2;
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

-- INSERINDO NA TABELA PRODUTOS

INSERT INTO PRODUTO VALUES 
(1,'SMART TV LED 48','1999.00',5),
(2,'SMARTPHONE LG G4','1549.00',3),
(3,'PERFUME FERRARI BLACK 125ML','119.90',10),
(4,'KINECT SENSOR PARA XBOX 360','129.00',4),
(5,'JAQUETA ADIDAS SST','152.00',3),
(6,'KIT CRECE PELO BOE COM 5 ITENS','130.00',3),
(7,'SHAMPOO UNIQ ONE','50.00',5),
(8,'CONDICIONADORES AUSSIE MOIST','30.00',5),
(9,'MáSCARA AUSSIE STRONG','300.00',2),
(10,'SPRAY FIXADOR AUSSIE','40.00',3),
(11,'KIT VICTORIA SECRETS PRA BOLSA','70.00',2),
(12,'HIDRATANTE VS COCONUT','30.00',4),
(13,'BODY BUTTER VS AMBER ROMANCE','35.00',7), 
(14,'BODY PARA MãOS E CORPO','35.00',4),
(15,'212 SEXY MEM 100 ML','214.00',3), 
(16,'212 MEM 100 ML','214.00',2), 
(17,'212 SEXY FEM 60 ML','199.00',5),
(18,'212 MEM SURF EDIçãO LIMITADA 100 ML','198.00',1),
(19,'CAROLINA CHIC MEN 100 ML','177.00',1), 
(20,'PACO RABANNE ONE MILLION INTENSE 100 ML','230.00',0),
(21,'POLO RED RALPH 75 ML','190.00',2),
(22,'CK ONE EDTION RED FOR HER 100 ML','110.00',0),
(23,'LADY GAGA FAME 100 ML','130.00',0),
(24,'BURBERRY BRIT 100 ML','220.00',2),
(25,'ACQUA DI GIOIA FEM EDT 100 ML','220.00',5), 
(26,'DIESEL ONLY THE BRAVE EDT 75 ML','199.00',10),
(27,'GUESS SEDUCTIVE 75 ML','165.00',10),
(28,'DOLCE GABBANA THE ONE 75 ML','220.00',3),
(29,'HUGO BOSS BOTTLED 100 ML','170.00',1),
(30,'CUBAS CHARUTO 35 ML','15.00',8),
(31,'ANTONIO BANDERAS THE SECRET 150 ML','45.00',5),
(32,'ANTONIO BANDERAS GOLDEN 150 ML','45.00',9),
(33,'PACO RABANNE 1 MILLION 150 ML','230.00',2);

INSERT INTO PRODUTO VALUES
(35,'CAMISA MALHA BRANCA','10.00',20),
(36,'CALçA JEANS TOULON','1120.00',412),
(37,'CINTO PRETO','12.00',124),
(38,'BOLSA FEMININA GEG','120.00',424),
(39,'CAMISA REGATA PRETA HBS','110.00',47),
(40,'212 MEM 500 ML','1220.00',415),
(41,'LENçO COLORIDO GG','19.00',744),
(42,'CAMISA POLO LAGARTIXA','121.00',94),
(43,'CHAVEIRO CORAçãO','10.00',46),
(44,'CHAVEIRO CORAçãO PARTIDO','10.00',44),
(45,'CARTEIRA MASCULINA PRETA','20.00',74),
(46,'TERNO PRETO SLIN','5120.00',214),
(47,'LADY GAGA FAME 200 ML','220.00',784),
(48,'MáSCARA AUSSIE STRONG MASTER','1620.00',324),
(49,'PACO RABANNE ONE MILLION INTENSE 200 ML','1110.00',343),
(50,'FIVELA DE OURO HARD','1420.00',542),
(51,'LUMINáRIA GOLDEN LED','10.00',784),
(52,'LUMINáRIA GOLDEN LED 30','129.00',214),
(53,'CAMISA POLO AZUL LAGARTIXA GG','124.00',421),
(54,'CAMISA SOCIAL BRANCA LACOSTA','129.00',441),
(55,'CAMISA SOCIAL PRETA COM GOLA ENGOMADA AZUL LAGARTIXA','124.00',41),
(56,'FIVELA AçO G','17.00',44),
(57,'CORAçãO NíQUEL AGC','10.00',45),
(58,'SUTIã SEM ALçA','20.00',454),
(59,'CINTO PRETO FIVELA AçO AGC','32.00',47),
(60,'BLUSA XADREZ GG AGC','24.00',44),
(61,'CASACO FIDO DIDO','82.00',411),
(62,'REGATA AMARELA FIDO DIDO P','29.00',412),
(63,'BLUSA GOLA V P LACOSTA','72.00',41),
(64,'CINTO XADREZ NERD','20.00',44),
(65,'CINTO COLORIDO G AGC','28.00',41);


--------------------------------------------------------------------------



--INSERINDO DADOS NA TABELA ITEM
CREATE OR REPLACE FUNCTION DADOSITEM()
RETURNS VOID AS
$$
DECLARE
I INT;
Z INT;
Q INT;
BEGIN
Z=1;
Q=1;
FOR I IN 01..2LOOP
INSERT INTO ITEM VALUES (I, Z,Q,(SELECT (PRECO * Q) FROM PRODUTO WHERE ID_PRODUTO = Z));
I:= I+1;
Z:= Z+1;
Q:= Q+1;
END LOOP;
Q=2;
FOR I IN 3..4LOOP
INSERT INTO ITEM VALUES (I, Z,Q,(SELECT (PRECO * Q) FROM PRODUTO WHERE ID_PRODUTO = Z));
I:= I+1;
Z:= Z+1;
Q:= Q+1;
END LOOP;
Q=1;
FOR I IN 5..6LOOP
INSERT INTO ITEM VALUES (I, Z,Q,(SELECT (PRECO * Q) FROM PRODUTO WHERE ID_PRODUTO = Z));
I:= I+1;
Z:= Z+1;
Q:= Q+1;
END LOOP;
Q=1;
FOR I IN 7..8LOOP
INSERT INTO ITEM VALUES (I, Z,Q,(SELECT (PRECO * Q) FROM PRODUTO WHERE ID_PRODUTO = Z));
I:= I+1;
Z:= Z+1;
Q:= Q+1;
END LOOP;
Q=1;
FOR I IN 9..10LOOP
INSERT INTO ITEM VALUES (I, Z,Q,(SELECT (PRECO * Q) FROM PRODUTO WHERE ID_PRODUTO = Z));
I:= I+1;
Z:= Z+1;
Q:= Q+1;
END LOOP;
END;
$$
LANGUAGE PLPGSQL;


SELECT DADOSITEM();
SELECT * FROM ITEM;
 --DROP TABLE ITEM


SELECT * FROM ENDERECOENTREGA;
SELECT * FROM CLIENTE;
SELECT * FROM PRODUTO;
SELECT * FROM COMPRA
ORDER BY 1;
SELECT * FROM ITEM ;

----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
--A APRTIR DAQUI é MULTIDIMENSIONAL
--CRIANDO O NOVO ESQUEMA PARA O MODELO MULTIDIMENSIONAL


CREATE SCHEMA BI;

SELECT * FROM ENDERECOENTREGA;
SELECT * FROM CLIENTE;
SELECT * FROM PRODUTO;
SELECT * FROM COMPRA;
SELECT * FROM ITEM ;
----------------------------------------------------------------------------------------------


-- TABELAS --

-- CLIENTE
CREATE TABLE BI.DIMCLIENTE AS(
SELECT C.*,
E.LOGRADAOURO, 
E.NUMERO, 
E.BAIRRO, 
E.CIDADE,
E.CEP, 
E.UF, 
E.ID_COMPRA,
E.PAIS FROM CLIENTE C, ENDERECOENTREGA E
WHERE C.CPF = E.CPF_CLIENTE );

--DROP TABLE BI.DIMCLIENTE;

SELECT * FROM BI.DIMCLIENTE;
----------------------------------------------------------------------------------------------

-- PRODUTO

CREATE TABLE BI.DIMPRODUTO AS (
SELECT * FROM PRODUTO);
--DROP TABLE BI.DIMPRODUTO;

SELECT * FROM BI.DIMPRODUTO;
----------------------------------------------------------------------------------------------

--VENDA

CREATE TABLE BI.FATO_VENDA AS(
SELECT I.ID_COMPRA,I.QNT, I.ID_PRODUTO,C.CPF_CLIENTE,C.DATACOMPRA, C.HORACOMPRA 
FROM ITEM I, COMPRA C
WHERE C.ID_COMPRA = I.ID_COMPRA 
ORDER BY 1
);

 --DROP TABLE BI.FATO_VENDA

SELECT * FROM BI.FATO_VENDA
ORDER BY 3;

----------------------------------------------------------------------------------------------

--TEMPO-- 

CREATE TABLE BI.DIMTEMPO AS (
SELECT DISTINCT DATACOMPRA, HORACOMPRA, ID_COMPRA
FROM BI.FATO_VENDA
ORDER BY 2);
--DROP TABLE BI.DIMTEMPO;

ALTER TABLE BI.DIMTEMPO
ADD DIA INT,
ADD MES INT,
ADD ANO INT,
ADD HORA INT;


UPDATE  BI.DIMTEMPO SET DIA = DATE_PART ('DAY',DATACOMPRA);
UPDATE  BI.DIMTEMPO SET MES = DATE_PART ('MONTH',DATACOMPRA);
UPDATE  BI.DIMTEMPO SET ANO = DATE_PART ('YEAR',DATACOMPRA);
UPDATE  BI.DIMTEMPO SET HORA = DATE_PART ('HOUR',HORACOMPRA);
----------------------------------------------------------------------------------------------

--CONSULTAS

SELECT * FROM BI.DIMCLIENTE;
SELECT * FROM BI.DIMPRODUTO;
SELECT * FROM BI.FATO_VENDA
SELECT * FROM BI.DIMTEMPO 


----------------------------------------------------------------------------------------------
 

-- CLIENTES COM MAIS COMPRAS
CREATE OR REPLACE VIEW BI.CLIENTESQUEMAISCOMPRAM AS

SELECT DISTINCT C.NOME "CLIENTES QUE MAIS COMPRAM",  COUNT(V.QNT) 
FROM BI.DIMCLIENTE C,BI.FATO_VENDA V
WHERE C.CPF = V.CPF_CLIENTE
AND V.ID_COMPRA = C.ID_COMPRA
GROUP BY C.NOME 
ORDER BY 2 DESC

--DROP VIEW BI.CLIENTESQUEMAISCOMPRAM;
SELECT * FROM BI.CLIENTESQUEMAISCOMPRAM;
----------------------------------------------------------------------------------------------


-- ITENS QUE NãO FORAM VENDIDOS  

CREATE OR REPLACE VIEW BI.ITENSNãOVENDIDOS AS

SELECT P.DESCRICAO, P.QNTDESTOQUE
FROM BI.DIMPRODUTO P
WHERE P.ID_PRODUTO 
NOT IN (SELECT ID_PRODUTO FROM BI.FATO_VENDA);

--DROP VIEW BI.ITENSNãOVENDIDOS;
SELECT * FROM BI.ITENSNãOVENDIDOS;
----------------------------------------------------------------------------------------------

-- PRODUTOS  MAIS VENDIDOS  
CREATE OR REPLACE VIEW BI.PRODUTOSMAISVENDIDOS AS
SELECT V.ID_PRODUTO,P.DESCRICAO, SUM(V.QNT) AS "PRODUTOS MAIS VENDIDOS" 

  FROM BI.DIMPRODUTO P,BI.FATO_VENDA V
WHERE P.ID_PRODUTO = V.ID_PRODUTO

 GROUP BY P.DESCRICAO,V.ID_PRODUTO
 ORDER BY 3 DESC
LIMIT 20;

--DROP VIEW BI.PRODUTOSMAISVENDIDOS;
SELECT * FROM BI.PRODUTOSMAISVENDIDOS;
----------------------------------------------------------------------------------------------

--PRODUTOS MENOS VENDIDOS E QUEM OS COMPROU 
CREATE OR REPLACE VIEW BI.CLIENTESCOMPRODUTOSMENOSVENDIDOS AS

SELECT DISTINCT C.NOME,C.EMAIL, P.DESCRICAO, SUM(V.QNT) AS "TOTAL DE VENDAS" 

  FROM BI.DIMPRODUTO P,BI.FATO_VENDA V,BI.DIMCLIENTE C
WHERE P.ID_PRODUTO = V.ID_PRODUTO
AND   V.CPF_CLIENTE = C.CPF
AND V.ID_COMPRA = C.ID_COMPRA

 GROUP BY P.DESCRICAO,C.NOME,C.EMAIL
 ORDER BY 4 ASC
LIMIT 30;

--DROP VIEW BI.CLIENTESCOMPRODUTOSMENOSVENDIDOS;

SELECT * FROM BI.CLIENTESCOMPRODUTOSMENOSVENDIDOS;

----------------------------------------------------------------------------------------------
--CONSULTAS POR CIDADES--
CREATE VIEW BI.CONSULTAVENDACIDADE AS
SELECT DISTINCT C.CIDADE ,C.NOME, V.ID_COMPRA, P.DESCRICAO
FROM BI.DIMCLIENTE C,BI.DIMPRODUTO P,BI.FATO_VENDA V
WHERE C.CPF = V.CPF_CLIENTE
AND V.ID_PRODUTO = P.ID_PRODUTO

--DROP VIEW BI.CONSULTAVENDACIDADE;
SELECT * FROM BI.CONSULTAVENDACIDADE;


----------------------------------------------------------------------------------------------

CREATE VIEW BI.CONSULTADEVENDAS AS
SELECT DISTINCT C.NOME,P.DESCRICAO,T.DIA,T.MES,T.ANO
FROM BI.DIMCLIENTE C,BI.DIMPRODUTO P,BI.FATO_VENDA V,BI.DIMTEMPO T
WHERE C.CPF = V.CPF_CLIENTE
AND V.ID_PRODUTO = P.ID_PRODUTO
AND V.ID_COMPRA = T.ID_COMPRA

--DROP VIEW BI.CONSULTADEVENDAS;

SELECT * FROM BI.CONSULTADEVENDAS;




